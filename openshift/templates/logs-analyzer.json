{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "test-logs-analyzer"
  },
  "message": "The following service(s) have been created in your project: ${NAME}.",
  "labels": {
    "template": "test-logs-analyzer",
    "app": "test-logs-analyzer"
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "creationTimestamp": null,
        "labels": {
          "app": "${NAME}"
        },
        "annotations": {
          "openshift.io/generated-by": "OpenShiftNewApp"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "8080-tcp",
            "protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "app": "${NAME}",
          "deploymentconfig": "${NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      },
      "status": {
        "loadBalancer": {}
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "creationTimestamp": null,
        "labels": {
          "app": "${NAME}"
        }
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}",
          "weight": 100
        },
        "port": {
          "targetPort": "8080-tcp"
        },
        "tls": {
          "termination": "edge",
          "insecureEdgeTerminationPolicy": "Redirect"
        },
        "wildcardPolicy": "None"
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
          "app": "${NAME}"
        },
        "annotations": {
          "openshift.io/generated-by": "OpenShiftNewApp"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          },
          "resources": {},
          "activeDeadlineSeconds": 21600
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          }
        ],
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "test": false,
        "selector": {
          "app": "${NAME}",
          "deploymentconfig": "${NAME}"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "${NAME}",
              "deploymentconfig": "${NAME}"
            },
            "annotations": {
              "openshift.io/generated-by": "OpenShiftNewApp"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "volume-tq1n5",
                "configMap": {
                  "name": "nginx-conf",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "${NAME}",
                "image": "gitlab-registry.cern.ch/{$NAMESPACE}/${NAME}",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "volume-tq1n5",
                    "mountPath": "/etc/nginx/conf.d"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "Always"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "securityContext": {},
            "schedulerName": "default-scheduler"
          }
        }
      },
      "status": {
        "latestVersion": 0,
        "observedGeneration": 0,
        "replicas": 0,
        "updatedReplicas": 0,
        "availableReplicas": 0,
        "unavailableReplicas": 0
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "generation": 2,
        "creationTimestamp": null,
        "labels": {
          "app": "${NAME}"
        },
        "annotations": {
          "openshift.io/generated-by": "OpenShiftNewApp",
          "openshift.io/image.dockerRepositoryCheck": "2018-08-16T15:16:43Z"
        }
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        },
        "tags": [
          {
            "name": "latest",
            "annotations": {
              "openshift.io/imported-from": "gitlab-registry.cern.ch/${NAMESPACE}/${NAME}:latest"
            },
            "from": {
              "kind": "DockerImage",
              "name": "gitlab-registry.cern.ch/${NAMESPACE}/${NAME}:latest"
            },
            "generation": 2,
            "importPolicy": {},
            "referencePolicy": {
              "type": "Source"
            }
          }
        ]
      },
      "status": {
        "dockerImageRepository": ""
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "dial-webapp"
    },
    {
      "name": "NAMESPACE",
      "displayName": "Namespace",
      "required": true,
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "value": "dialtone"
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "required": true,
      "description": "The URL of the repository with your application source code.",
      "value": "git@github.com:cern-dialtone/phone-logs-analyzer.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository."
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Nginx service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    }
  ]
}